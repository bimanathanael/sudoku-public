{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/bimanathan/Documents/HACKTIV8/3-phase/2-week/1-day/sugoku/pages/Game.js\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { StatusBar } from 'expo-status-bar';\nimport { getSudokuBoard, validate } from \"../store/actions/sudokuActions\";\nimport { Board } from \"../components/Board\";\nimport CountDown from 'react-native-countdown-component';\nexport var Game = function Game(_ref) {\n  var params = _ref.route.params;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.sudokuReducers;\n  }),\n      sudokuBoard = _useSelector.sudokuBoard,\n      difficulty = _useSelector.difficulty;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      getBoard = _useState2[0],\n      setBoard = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      getDifficulty = _useState4[0],\n      setDifficulty = _useState4[1];\n\n  useEffect(function () {\n    dispatch(getSudokuBoard(params.difficulty));\n  }, [dispatch]);\n  useEffect(function () {\n    setBoard(JSON.parse(JSON.stringify(sudokuBoard)));\n  }, [sudokuBoard]);\n  useEffect(function () {\n    setDifficulty(JSON.parse(JSON.stringify(difficulty)));\n  }, [difficulty]);\n\n  if (getBoard.length === 0) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }\n    }, \" please wait ..\");\n  }\n\n  var chooseDifficulty = function chooseDifficulty(difficulty) {\n    dispatch(getSudokuBoard(difficulty));\n  };\n\n  return React.createElement(ScrollView, {\n    contentContainerStyle: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, console.log(getDifficulty, 'getDifficulty'), React.createElement(CountDown, {\n    until: 60 * 10 + 30,\n    size: 30,\n    onFinish: function onFinish() {\n      return alert('Finished');\n    },\n    digitStyle: {\n      backgroundColor: '#FFF'\n    },\n    digitTxtStyle: {\n      color: '#1CC625'\n    },\n    timeToShow: ['M', 'S'],\n    timeLabels: {\n      m: 'MM',\n      s: 'SS'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \" Solve our SUDOKU, \", \"\" + params.name, \" ! \"), React.createElement(View, {\n    style: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.buttonDiff,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    color: \"#ffb142\",\n    onPress: function onPress() {\n      return chooseDifficulty(\"easy\");\n    },\n    title: \"Easy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.buttonDiff,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    color: \"#ff793f\",\n    onPress: function onPress() {\n      return chooseDifficulty(\"medium\");\n    },\n    title: \"Medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.buttonDiff,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    color: \"#ff5252\",\n    onPress: function onPress() {\n      return chooseDifficulty(\"hard\");\n    },\n    title: \"Hard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }))), getBoard.length > 0 ? React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, React.createElement(Board, {\n    getBoard: getBoard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })) : null, React.createElement(StatusBar, {\n    style: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n};\nvar widthWindows = Dimensions.get(\"window\").width;\nvar styles = StyleSheet.create({\n  title: {\n    marginTop: widthWindows - 150,\n    color: '#f7f1e3',\n    fontSize: 20,\n    marginBottom: 20,\n    borderBottomColor: \"#ff793f\",\n    borderBottomWidth: 3\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#40407a'\n  },\n  buttonDiff: {\n    marginLeft: 5,\n    marginRight: 5\n  },\n  wrapper: {\n    flexDirection: \"row\",\n    marginBottom: 10,\n    marginTop: 5\n  }\n});","map":{"version":3,"sources":["/home/bimanathan/Documents/HACKTIV8/3-phase/2-week/1-day/sugoku/pages/Game.js"],"names":["React","useEffect","useState","useDispatch","useSelector","StatusBar","getSudokuBoard","validate","Board","CountDown","Game","params","route","dispatch","state","sudokuReducers","sudokuBoard","difficulty","getBoard","setBoard","getDifficulty","setDifficulty","JSON","parse","stringify","length","chooseDifficulty","styles","container","console","log","alert","backgroundColor","color","m","s","title","name","wrapper","buttonDiff","widthWindows","Dimensions","get","width","StyleSheet","create","marginTop","fontSize","marginBottom","borderBottomColor","borderBottomWidth","flex","alignItems","justifyContent","marginLeft","marginRight","flexDirection"],"mappings":"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","sourcesContent":["import React , { useEffect, useState } from 'react'\nimport { StyleSheet, Text, View, ScrollView, TextInput, Dimensions, Button } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { StatusBar } from 'expo-status-bar';\nimport { getSudokuBoard, validate} from '../store/actions/sudokuActions'\nimport { Board } from '../components/Board'\nimport CountDown from 'react-native-countdown-component';\n\nexport const Game = ({route: {params}}) => {\n  const dispatch = useDispatch()\n  const {sudokuBoard, difficulty} = useSelector(state => state.sudokuReducers)\n  const [getBoard, setBoard] = useState([])\n  const [getDifficulty, setDifficulty] = useState([])\n  \n  useEffect( () => {\n    dispatch(getSudokuBoard(params.difficulty))\n  },[dispatch])\n\n  useEffect( () => {\n    setBoard(JSON.parse(JSON.stringify(sudokuBoard)))\n  },[sudokuBoard])\n\n  useEffect( () => {\n    setDifficulty(JSON.parse(JSON.stringify(difficulty)))\n  },[difficulty])\n  \n\n  if(getBoard.length === 0 ) {\n    return <Text> please wait ..</Text>\n  }\n   \n  \n  const chooseDifficulty = (difficulty)  => {\n    dispatch(getSudokuBoard(difficulty))\n  }\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      {console.log(getDifficulty, 'getDifficulty')}\n      <CountDown\n        until={60 * 10 + 30}\n        size={30}\n        onFinish={() => alert('Finished')}\n        digitStyle={{backgroundColor: '#FFF'}}\n        digitTxtStyle={{color: '#1CC625'}}\n        timeToShow={['M', 'S']}\n        timeLabels={{m: 'MM', s: 'SS'}}\n      />\n      <Text style={styles.title}> Solve our SUDOKU, {`${params.name}`} ! </Text>\n      <View style={styles.wrapper}>\n        <View style={styles.buttonDiff}>\n          <Button color=\"#ffb142\" onPress={() => chooseDifficulty(\"easy\")} title=\"Easy\"/>\n        </View>\n        <View style={styles.buttonDiff}>\n          <Button color=\"#ff793f\" onPress={() => chooseDifficulty(\"medium\")} title=\"Medium\"/>\n        </View>\n        <View style={styles.buttonDiff}>\n          <Button color=\"#ff5252\" onPress={() => chooseDifficulty(\"hard\")} title=\"Hard\"/>\n        </View>\n      </View>\n      {getBoard.length >0 ? \n        <View>\n          <Board getBoard={getBoard}/>\n        </View>\n        :\n        null\n      }\n      <StatusBar style=\"auto\" />\n    </ScrollView>\n  )\n}\n\nconst widthWindows = Dimensions.get(\"window\").width\nconst styles = StyleSheet.create({\n  title: {\n    marginTop: widthWindows-150,\n    color: '#f7f1e3',\n    fontSize: 20,\n    marginBottom: 20,\n    borderBottomColor: \"#ff793f\",\n    borderBottomWidth: 3,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#40407a'\n  },\n  buttonDiff: {\n    marginLeft: 5,\n    marginRight: 5\n  },\n  wrapper: {\n    flexDirection: \"row\",\n    marginBottom: 10,\n    marginTop: 5\n  },\n});"]},"metadata":{},"sourceType":"module"}