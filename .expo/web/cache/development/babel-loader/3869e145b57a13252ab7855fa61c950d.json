{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/bimanathan/Documents/HACKTIV8/3-phase/2-week/1-day/sugoku/pages/Home.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport { StatusBar } from 'expo-status-bar';\nimport { getSudokuBoard, validate } from \"../store/actions/sudokuActions\";\nimport { Container, Header, Title, Content, Footer, FooterTab, Button, Left, Right, Body, Icon, Text } from 'native-base';\nexport var Home = function Home() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.sudokuReducers;\n  }),\n      sudokuBoard = _useSelector.sudokuBoard,\n      result = _useSelector.result;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      getBoard = _useState2[0],\n      setBoard = _useState2[1];\n\n  useEffect(function () {\n    dispatch(getSudokuBoard());\n  }, [dispatch]);\n  useEffect(function () {\n    setBoard(sudokuBoard);\n  }, [sudokuBoard]);\n  useEffect(function () {\n    if (result) {\n      alert(result.status);\n    }\n  }, [result]);\n\n  if (getBoard.length === 0) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    }, \" please wait ..\");\n  }\n\n  var handleOnChange = function handleOnChange(e, row, col) {\n    var value = e.target.value;\n    var newBoard = getBoard;\n    newBoard.board[row][col] = +value;\n    setBoard(newBoard);\n  };\n\n  var chooseDifficulty = function chooseDifficulty(difficulty) {\n    console.log(difficulty);\n    dispatch(getSudokuBoard(difficulty));\n  };\n\n  var validateSudoku = function validateSudoku() {\n    console.log(getBoard, \"getBoard\");\n    dispatch(validate(getBoard));\n  };\n\n  return React.createElement(ScrollView, {\n    contentContainerStyle: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(Left, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    transparent: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    name: \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }))), React.createElement(Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Header\")), React.createElement(Right, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"This is Content Section\")), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, React.createElement(FooterTab, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    full: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \"Footer\"))))), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \" ini home \"));\n};\nvar widthWindows = Dimensions.get(\"window\").width;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  box: {\n    textAlign: 'center',\n    width: (widthWindows - 30) / 9,\n    height: 30,\n    borderWidth: 1,\n    borderColor: 'grey'\n  },\n  boxFix: {\n    textAlign: 'center',\n    width: (widthWindows - 30) / 9,\n    height: 30,\n    borderWidth: 1,\n    borderColor: 'grey',\n    color: 'red'\n  }\n});","map":{"version":3,"sources":["/home/bimanathan/Documents/HACKTIV8/3-phase/2-week/1-day/sugoku/pages/Home.js"],"names":["React","useEffect","useState","Provider","useDispatch","useSelector","StatusBar","getSudokuBoard","validate","Container","Header","Title","Content","Footer","FooterTab","Button","Left","Right","Body","Icon","Text","Home","dispatch","state","sudokuReducers","sudokuBoard","result","getBoard","setBoard","alert","status","length","handleOnChange","e","row","col","value","target","newBoard","board","chooseDifficulty","difficulty","console","log","validateSudoku","styles","container","widthWindows","Dimensions","get","width","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","box","textAlign","height","borderWidth","borderColor","boxFix","color"],"mappings":"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","sourcesContent":["import React , { useEffect, useState } from 'react'\n// import { StyleSheet, Text, View, ScrollView, TextInput, Dimensions } from 'react-native';\nimport { Provider, useDispatch, useSelector } from 'react-redux'\nimport { StatusBar } from 'expo-status-bar';\nimport { getSudokuBoard, validate} from '../store/actions/sudokuActions'\nimport { Container, Header, Title, Content, Footer, FooterTab, Button, Left, Right, Body, Icon, Text } from 'native-base';\n\n\nexport const Home = () => {\n  const dispatch = useDispatch()\n  const {sudokuBoard, result} = useSelector(state => state.sudokuReducers)\n  const [getBoard, setBoard] = useState([])\n\n  useEffect( () => {\n    dispatch(getSudokuBoard())\n  },[dispatch])\n\n  useEffect( () => {\n    setBoard(sudokuBoard)\n  },[sudokuBoard])\n\n  useEffect( () => {\n    if(result){\n      alert(result.status)\n    }\n  },[result])\n  \n\n  if(getBoard.length === 0 ) {\n    return <Text> please wait ..</Text>\n  }\n   \n  const handleOnChange = (e,row, col) => {\n    const {value} = e.target\n    const newBoard =getBoard\n    newBoard.board[row][col] = +value\n    setBoard(newBoard)\n  }\n  \n  const chooseDifficulty = (difficulty)  => {\n    console.log(difficulty)\n    dispatch(getSudokuBoard(difficulty))\n  }\n\n  const validateSudoku = () =>{\n    console.log(getBoard,\"getBoard\")\n    dispatch(validate(getBoard))\n  }\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      <Container>\n        <Header>\n          <Left>\n            <Button transparent>\n              <Icon name='menu' />\n            </Button>\n          </Left>\n          <Body>\n            <Title>Header</Title>\n          </Body>\n          <Right />\n        </Header>\n        <Content>\n          <Text>\n            This is Content Section\n          </Text>\n        </Content>\n        <Footer>\n          <FooterTab>\n            <Button full>\n              <Text>Footer</Text>\n            </Button>\n          </FooterTab>\n        </Footer>\n      </Container>\n      <Text> ini home </Text>\n      {/* <Button onPress={()=>  chooseDifficulty(\"easy\")} title=\"Easy\"/>\n      <Button onPress={()=>  chooseDifficulty(\"medium\")} title=\"Medium\"/>\n      <Button onPress={()=>  chooseDifficulty(\"hard\")} title=\"Hard\"/> */}\n\n      {/* {getBoard.board? \n        <View style={{flexDirection: \"row\"}}>\n          { \n          // !boardUpdate &&\n          getBoard.board.map((board, row) => {\n            return (\n              <View key={`${row}`}>\n                {board.map((item, col) => {\n                    return (\n                      <>\n                      {item === 0 ? \n                        <TextInput key={`${col}`} defaultValue=\"\" \n                        onChange={(e) => handleOnChange(e,row, col)} style={styles.box}\n                        /> \n                      : \n                        <TextInput key={`${col}`} value={`${item}`} editable={false}\n                        onChange={(e) => handleOnChange(e,row, col)} style={styles.boxFix}\n                        /> \n                      }\n                      \n                        {(col + 1) % 9 == 0 ? \n                          <br/>\n                          :\n                          null\n                        }\n                      </>\n                    )\n                  \n                  })\n                  \n                }\n                </View>\n                )}\n              )\n              \n            }\n        </View>\n        :\n        null\n      }\n      <Button onPress={()=>  validateSudoku()} title=\"Validate\"/>\n      <StatusBar style=\"auto\" /> */}\n    </ScrollView>\n  )\n}\n\nconst widthWindows = Dimensions.get(\"window\").width\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  box: {\n    textAlign:'center', \n    width: (widthWindows-30)/9, \n    height: 30, \n    borderWidth:1,\n    borderColor:'grey'  \n  },\n  boxFix: {\n    textAlign:'center', \n    width: (widthWindows-30)/9, \n    height: 30, \n    borderWidth:1,\n    borderColor:'grey',\n    color: 'red'\n  }\n});"]},"metadata":{},"sourceType":"module"}