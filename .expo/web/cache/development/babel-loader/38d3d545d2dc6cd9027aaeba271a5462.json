{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/bimanathan/Documents/HACKTIV8/3-phase/2-week/1-day/sugoku/pages/Game.js\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { StatusBar } from 'expo-status-bar';\nimport { getSudokuBoard, validate } from \"../store/actions/sudokuActions\";\nimport { Board } from \"../components/Board\";\nexport var Game = function Game(_ref) {\n  var params = _ref.route.params,\n      navigation = _ref.navigation;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.sudokuReducers;\n  }),\n      sudokuBoard = _useSelector.sudokuBoard,\n      result = _useSelector.result;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      getBoard = _useState2[0],\n      setBoard = _useState2[1];\n\n  useEffect(function () {\n    console.log(\"useEffect pertama\");\n    dispatch(getSudokuBoard());\n  }, [dispatch]);\n  useEffect(function () {\n    console.log(\"useEffect kedua\");\n    setBoard(sudokuBoard);\n    setBoardOrigin(sudokuBoard);\n  }, [sudokuBoard]);\n  useEffect(function () {\n    console.log(\"useEffect ketiga\");\n\n    if (result) {\n      setResult(result.status);\n      alert(result.status);\n    }\n  }, [result]);\n\n  if (getBoard.length === 0) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }\n    }, \" please wait ..\");\n  }\n\n  var chooseDifficulty = function chooseDifficulty(difficulty) {\n    console.log(difficulty);\n    dispatch(getSudokuBoard(difficulty));\n  };\n\n  var validateSudoku = function validateSudoku() {\n    console.log(getBoard, \"getBoard\");\n    dispatch(validate(getBoard));\n  };\n\n  return React.createElement(ScrollView, {\n    contentContainerStyle: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \" Solve our SUDOKU, \", React.createElement(\"strong\", {\n    style: {\n      color: \"#ffb142\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 53\n    }\n  }, \" \", params.name, \" \"), \"! \"), React.createElement(View, {\n    style: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.buttonDiff,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    color: \"#ffb142\",\n    onPress: function onPress() {\n      return chooseDifficulty(\"easy\");\n    },\n    title: \"Easy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.buttonDiff,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    color: \"#ff793f\",\n    onPress: function onPress() {\n      return chooseDifficulty(\"medium\");\n    },\n    title: \"Medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.buttonDiff,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    color: \"#ff5252\",\n    onPress: function onPress() {\n      return chooseDifficulty(\"hard\");\n    },\n    title: \"Hard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }))), sudokuBoard.length > 0 ? React.createElement(View, {\n    style: styles.wrapperBoard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(Board, {\n    sudokuBoard: sudokuBoard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  })) : null, React.createElement(View, {\n    style: styles.validateBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    color: \"#706fd3\",\n    style: styles.validateBtn,\n    onPress: function onPress() {\n      validateSudoku();\n    },\n    title: \"Validate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })), React.createElement(StatusBar, {\n    style: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }));\n};\nvar widthWindows = Dimensions.get(\"window\").width;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#40407a'\n  },\n  box: {\n    textAlign: 'center',\n    width: (widthWindows - 30) / 9,\n    height: 30,\n    color: 'black',\n    borderWidth: 1,\n    borderColor: '#2c2c54'\n  },\n  boxFix: {\n    textAlign: 'center',\n    width: (widthWindows - 30) / 9,\n    height: 30,\n    borderWidth: 1,\n    borderColor: '#2c2c54',\n    color: 'red'\n  },\n  buttonDiff: {\n    marginLeft: 5,\n    marginRight: 5\n  },\n  wrapper: {\n    flexDirection: \"row\",\n    marginBottom: 5,\n    marginTop: 5\n  },\n  wrapperBoard: {\n    flexDirection: \"row\",\n    marginBottom: 5,\n    marginTop: 5,\n    backgroundColor: '#d1ccc0',\n    padding: 5\n  },\n  title: {\n    color: '#f7f1e3',\n    fontSize: 20,\n    marginBottom: 20,\n    borderBottomColor: \"#ff793f\",\n    borderBottomWidth: 3,\n    textAlign: \"center\"\n  },\n  validateBtn: {\n    marginTop: 10,\n    borderTopColor: \"#ff793f\",\n    borderTopWidth: 3\n  }\n});","map":{"version":3,"sources":["/home/bimanathan/Documents/HACKTIV8/3-phase/2-week/1-day/sugoku/pages/Game.js"],"names":["React","useEffect","useState","useDispatch","useSelector","StatusBar","getSudokuBoard","validate","Board","Game","params","route","navigation","dispatch","state","sudokuReducers","sudokuBoard","result","getBoard","setBoard","console","log","setBoardOrigin","setResult","status","alert","length","chooseDifficulty","difficulty","validateSudoku","styles","container","title","color","name","wrapper","buttonDiff","wrapperBoard","validateBtn","widthWindows","Dimensions","get","width","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","box","textAlign","height","borderWidth","borderColor","boxFix","marginLeft","marginRight","flexDirection","marginBottom","marginTop","padding","fontSize","borderBottomColor","borderBottomWidth","borderTopColor","borderTopWidth"],"mappings":";;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,EAA4BC,QAA5B,QAA4C,OAA5C;;;;;;;;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,cAAT,EAAyBC,QAAzB;AACA,SAASC,KAAT;AAGA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAmC;AAAA,MAAzBC,MAAyB,QAAjCC,KAAiC,CAAzBD,MAAyB;AAAA,MAAhBE,UAAgB,QAAhBA,UAAgB;AACrD,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AADqD,qBAEvBC,WAAW,CAAC,UAAAU,KAAK;AAAA,WAAIA,KAAK,CAACC,cAAV;AAAA,GAAN,CAFY;AAAA,MAE9CC,WAF8C,gBAE9CA,WAF8C;AAAA,MAEjCC,MAFiC,gBAEjCA,MAFiC;;AAAA,kBAGxBf,QAAQ,CAAC,EAAD,CAHgB;AAAA;AAAA,MAG9CgB,QAH8C;AAAA,MAGpCC,QAHoC;;AAKrDlB,EAAAA,SAAS,CAAE,YAAM;AACfmB,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAR,IAAAA,QAAQ,CAACP,cAAc,EAAf,CAAR;AACD,GAHQ,EAGP,CAACO,QAAD,CAHO,CAAT;AAKAZ,EAAAA,SAAS,CAAE,YAAM;AACfmB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAF,IAAAA,QAAQ,CAACH,WAAD,CAAR;AACAM,IAAAA,cAAc,CAACN,WAAD,CAAd;AACD,GAJQ,EAIP,CAACA,WAAD,CAJO,CAAT;AAMAf,EAAAA,SAAS,CAAE,YAAM;AACfmB,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,QAAGJ,MAAH,EAAU;AACRM,MAAAA,SAAS,CAACN,MAAM,CAACO,MAAR,CAAT;AACAC,MAAAA,KAAK,CAACR,MAAM,CAACO,MAAR,CAAL;AACD;AACF,GANQ,EAMP,CAACP,MAAD,CANO,CAAT;;AASA,MAAGC,QAAQ,CAACQ,MAAT,KAAoB,CAAvB,EAA2B;AACzB,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACD;;AAGD,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,UAAD,EAAiB;AACxCR,IAAAA,OAAO,CAACC,GAAR,CAAYO,UAAZ;AACAf,IAAAA,QAAQ,CAACP,cAAc,CAACsB,UAAD,CAAf,CAAR;AACD,GAHD;;AAKA,MAAMC,cAAc,GAAI,SAAlBA,cAAkB,GAAK;AAC3BT,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAqB,UAArB;AACAL,IAAAA,QAAQ,CAACN,QAAQ,CAACW,QAAD,CAAT,CAAR;AACD,GAHD;;AAKA,SACE,oBAAC,UAAD;AAAY,IAAA,qBAAqB,EAAEY,MAAM,CAACC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA8C;AAAQ,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC;AAAP,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAoCvB,MAAM,CAACwB,IAA3C,MAA9C,OADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAE;AAAA,aAAMT,gBAAgB,CAAC,MAAD,CAAtB;AAAA,KAAjC;AAAiE,IAAA,KAAK,EAAC,MAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACM,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAE;AAAA,aAAMT,gBAAgB,CAAC,QAAD,CAAtB;AAAA,KAAjC;AAAmE,IAAA,KAAK,EAAC,QAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACM,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAE;AAAA,aAAMT,gBAAgB,CAAC,MAAD,CAAtB;AAAA,KAAjC;AAAiE,IAAA,KAAK,EAAC,MAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CAFF,EAaGX,WAAW,CAACU,MAAZ,GAAoB,CAApB,GACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACO,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAErB,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADD,GAOC,IApBJ,EAsBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEc,MAAM,CAACQ,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,KAAK,EAAER,MAAM,CAACQ,WAAtC;AAAmD,IAAA,OAAO,EAAG,mBAAM;AACjET,MAAAA,cAAc;AAIf,KALD;AAKG,IAAA,KAAK,EAAC,UALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAtBF,EA8BE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BF,CADF;AAkCD,CA1EM;AA4EP,IAAMU,YAAY,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA9C;AACA,IAAMZ,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC/Bb,EAAAA,SAAS,EAAE;AACTc,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTF,IAAAA,eAAe,EAAE;AALR,GADoB;AAQ/BG,EAAAA,GAAG,EAAE;AACHC,IAAAA,SAAS,EAAC,QADP;AAEHR,IAAAA,KAAK,EAAE,CAACH,YAAY,GAAC,EAAd,IAAkB,CAFtB;AAGHY,IAAAA,MAAM,EAAE,EAHL;AAIHlB,IAAAA,KAAK,EAAE,OAJJ;AAKHmB,IAAAA,WAAW,EAAE,CALV;AAMHC,IAAAA,WAAW,EAAC;AANT,GAR0B;AAgB/BC,EAAAA,MAAM,EAAE;AACNJ,IAAAA,SAAS,EAAC,QADJ;AAENR,IAAAA,KAAK,EAAE,CAACH,YAAY,GAAC,EAAd,IAAkB,CAFnB;AAGNY,IAAAA,MAAM,EAAE,EAHF;AAINC,IAAAA,WAAW,EAAC,CAJN;AAKNC,IAAAA,WAAW,EAAC,SALN;AAMNpB,IAAAA,KAAK,EAAE;AAND,GAhBuB;AAyB/BG,EAAAA,UAAU,EAAE;AACVmB,IAAAA,UAAU,EAAE,CADF;AAEVC,IAAAA,WAAW,EAAE;AAFH,GAzBmB;AA6B/BrB,EAAAA,OAAO,EAAE;AACPsB,IAAAA,aAAa,EAAE,KADR;AAEPC,IAAAA,YAAY,EAAE,CAFP;AAGPC,IAAAA,SAAS,EAAE;AAHJ,GA7BsB;AAkC/BtB,EAAAA,YAAY,EAAE;AACZoB,IAAAA,aAAa,EAAE,KADH;AAEZC,IAAAA,YAAY,EAAE,CAFF;AAGZC,IAAAA,SAAS,EAAE,CAHC;AAIZb,IAAAA,eAAe,EAAE,SAJL;AAKZc,IAAAA,OAAO,EAAE;AALG,GAlCiB;AAyC/B5B,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,SADF;AAEL4B,IAAAA,QAAQ,EAAE,EAFL;AAGLH,IAAAA,YAAY,EAAE,EAHT;AAILI,IAAAA,iBAAiB,EAAE,SAJd;AAKLC,IAAAA,iBAAiB,EAAE,CALd;AAMLb,IAAAA,SAAS,EAAE;AANN,GAzCwB;AAiD/BZ,EAAAA,WAAW,EAAC;AACVqB,IAAAA,SAAS,EAAE,EADD;AAEVK,IAAAA,cAAc,EAAE,SAFN;AAGVC,IAAAA,cAAc,EAAE;AAHN;AAjDmB,CAAlB,CAAf","sourcesContent":["import React , { useEffect, useState } from 'react'\nimport { StyleSheet, Text, View, ScrollView, TextInput, Dimensions, Button } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { StatusBar } from 'expo-status-bar';\nimport { getSudokuBoard, validate} from '../store/actions/sudokuActions'\nimport { Board } from '../components/Board'\n\n\nexport const Game = ({route: {params}, navigation}) => {\n  const dispatch = useDispatch()\n  const {sudokuBoard, result} = useSelector(state => state.sudokuReducers)\n  const [getBoard, setBoard] = useState([])\n  \n  useEffect( () => {\n    console.log(\"useEffect pertama\")\n    dispatch(getSudokuBoard())\n  },[dispatch])\n\n  useEffect( () => {\n    console.log(\"useEffect kedua\")\n    setBoard(sudokuBoard)\n    setBoardOrigin(sudokuBoard)\n  },[sudokuBoard])\n\n  useEffect( () => {\n    console.log(\"useEffect ketiga\")\n    if(result){\n      setResult(result.status)\n      alert(result.status)\n    }\n  },[result])\n  \n\n  if(getBoard.length === 0 ) {\n    return <Text> please wait ..</Text>\n  }\n   \n  \n  const chooseDifficulty = (difficulty)  => {\n    console.log(difficulty)\n    dispatch(getSudokuBoard(difficulty))\n  }\n\n  const validateSudoku  = () =>{\n    console.log(getBoard,\"getBoard\")\n    dispatch(validate(getBoard))\n  }\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      <Text style={styles.title}> Solve our SUDOKU, <strong style={{color:\"#ffb142\"}}> {params.name} </strong>! </Text>\n      <View style={styles.wrapper}>\n        <View style={styles.buttonDiff}>\n          <Button color=\"#ffb142\" onPress={() => chooseDifficulty(\"easy\")} title=\"Easy\"/>\n        </View>\n        <View style={styles.buttonDiff}>\n          <Button color=\"#ff793f\" onPress={() => chooseDifficulty(\"medium\")} title=\"Medium\"/>\n        </View>\n        <View style={styles.buttonDiff}>\n          <Button color=\"#ff5252\" onPress={() => chooseDifficulty(\"hard\")} title=\"Hard\"/>\n        </View>\n      </View>\n      {sudokuBoard.length >0 ? \n        <View style={styles.wrapperBoard}>\n          \n          <Board sudokuBoard={sudokuBoard} />\n\n        </View>\n        :\n        null\n      }\n      <View style={styles.validateBtn}>\n        <Button color=\"#706fd3\" style={styles.validateBtn} onPress={ ()=>  {\n          validateSudoku()\n          // navigation.navigate(\"Finish\",{\n          //   result: getResult\n          // })\n        }} title=\"Validate\"/>\n      </View>\n      <StatusBar style=\"auto\" />\n    </ScrollView>\n  )\n}\n\nconst widthWindows = Dimensions.get(\"window\").width\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#40407a'\n  },\n  box: {\n    textAlign:'center', \n    width: (widthWindows-30)/9, \n    height: 30, \n    color: 'black',\n    borderWidth: 1,\n    borderColor:'#2c2c54'  \n  },\n  boxFix: {\n    textAlign:'center', \n    width: (widthWindows-30)/9, \n    height: 30, \n    borderWidth:1,\n    borderColor:'#2c2c54',\n    color: 'red'\n    // color: '#b33939'\n  },\n  buttonDiff: {\n    marginLeft: 5,\n    marginRight: 5\n  },\n  wrapper: {\n    flexDirection: \"row\",\n    marginBottom: 5,\n    marginTop: 5\n  },\n  wrapperBoard: {\n    flexDirection: \"row\",\n    marginBottom: 5,\n    marginTop: 5,\n    backgroundColor: '#d1ccc0',\n    padding: 5\n  },\n  title: {\n    color: '#f7f1e3',\n    fontSize: 20,\n    marginBottom: 20,\n    borderBottomColor: \"#ff793f\",\n    borderBottomWidth: 3,\n    textAlign: \"center\"\n  },\n  validateBtn:{\n    marginTop: 10,\n    borderTopColor: \"#ff793f\",\n    borderTopWidth: 3,\n  }\n});"]},"metadata":{},"sourceType":"module"}