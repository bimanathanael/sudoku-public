{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/bimanathan/Documents/HACKTIV8/3-phase/2-week/1-day/sugoku/pages/Home.js\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport { StatusBar } from 'expo-status-bar';\nimport { getSudokuBoard, validate } from \"../store/actions/sudokuActions\";\nexport var Home = function Home() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.sudokuReducers;\n  }),\n      sudokuBoard = _useSelector.sudokuBoard,\n      result = _useSelector.result;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      getBoard = _useState2[0],\n      setBoard = _useState2[1];\n\n  useEffect(function () {\n    dispatch(getSudokuBoard());\n  }, [dispatch]);\n  useEffect(function () {\n    setBoard(sudokuBoard);\n  }, [sudokuBoard]);\n  useEffect(function () {\n    if (result) {\n      alert(result.status);\n    }\n  }, [result]);\n\n  if (getBoard.length === 0) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }\n    }, \" please wait ..\");\n  }\n\n  var handleOnChange = function handleOnChange(e, row, col) {\n    var value = e.target.value;\n    var newBoard = getBoard;\n    newBoard.board[row][col] = +value;\n    setBoard(newBoard);\n  };\n\n  var chooseDifficulty = function chooseDifficulty(difficulty) {\n    console.log(difficulty);\n    dispatch(getSudokuBoard(difficulty));\n  };\n\n  var validateSudoku = function validateSudoku() {\n    console.log(getBoard, \"getBoard\");\n    dispatch(validate(getBoard));\n  };\n\n  return React.createElement(ScrollView, {\n    contentContainerStyle: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \" Welcome to SUDOKU \"), React.createElement(View, {\n    style: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.buttonDiff,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    color: \"red\",\n    onPress: function onPress() {\n      return chooseDifficulty(\"easy\");\n    },\n    title: \"Easy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.buttonDiff,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    color: \"red\",\n    onPress: function onPress() {\n      return chooseDifficulty(\"medium\");\n    },\n    title: \"Medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.buttonDiff,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    color: \"red\",\n    onPress: function onPress() {\n      return chooseDifficulty(\"hard\");\n    },\n    title: \"Hard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }))), getBoard.board ? React.createElement(View, {\n    style: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, getBoard.board.map(function (board, row) {\n    return React.createElement(View, {\n      key: \"\" + row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, board.map(function (item, col) {\n      return React.createElement(React.Fragment, null, item === 0 ? React.createElement(TextInput, {\n        key: \"\" + col,\n        defaultValue: \"\",\n        onChange: function onChange(e) {\n          return handleOnChange(e, row, col);\n        },\n        style: styles.box,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }\n      }) : React.createElement(TextInput, {\n        key: \"\" + col,\n        value: \"\" + item,\n        editable: false,\n        onChange: function onChange(e) {\n          return handleOnChange(e, row, col);\n        },\n        style: styles.boxFix,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      }), (col + 1) % 9 == 0 ? React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 27\n        }\n      }) : null);\n    }));\n  })) : null, React.createElement(Button, {\n    onPress: function onPress() {\n      return validateSudoku();\n    },\n    title: \"Validate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n};\nvar widthWindows = Dimensions.get(\"window\").width;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#40407a'\n  },\n  box: {\n    textAlign: 'center',\n    width: (widthWindows - 30) / 9,\n    height: 30,\n    borderWidth: 1,\n    borderColor: 'grey'\n  },\n  boxFix: {\n    textAlign: 'center',\n    width: (widthWindows - 30) / 9,\n    height: 30,\n    borderWidth: 1,\n    borderColor: 'grey',\n    color: 'red'\n  },\n  buttonDiff: {\n    marginLeft: 5,\n    marginRight: 5\n  },\n  wrapper: {\n    flexDirection: \"row\",\n    marginBottom: 5,\n    marginTop: 5\n  },\n  title: {\n    color: '#f7f1e3',\n    fontSize: 20,\n    marginBottom: 20,\n    borderBottomColor: \"white\",\n    borderBottomWidth: 1\n  }\n});","map":{"version":3,"sources":["/home/bimanathan/Documents/HACKTIV8/3-phase/2-week/1-day/sugoku/pages/Home.js"],"names":["React","useEffect","useState","Provider","useDispatch","useSelector","StatusBar","getSudokuBoard","validate","Home","dispatch","state","sudokuReducers","sudokuBoard","result","getBoard","setBoard","alert","status","length","handleOnChange","e","row","col","value","target","newBoard","board","chooseDifficulty","difficulty","console","log","validateSudoku","styles","container","title","wrapper","buttonDiff","map","item","box","boxFix","widthWindows","Dimensions","get","width","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","textAlign","height","borderWidth","borderColor","color","marginLeft","marginRight","flexDirection","marginBottom","marginTop","fontSize","borderBottomColor","borderBottomWidth"],"mappings":"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","sourcesContent":["import React , { useEffect, useState } from 'react'\nimport { StyleSheet, Text, View, ScrollView, TextInput, Dimensions, Button } from 'react-native';\nimport { Provider, useDispatch, useSelector } from 'react-redux'\nimport { StatusBar } from 'expo-status-bar';\nimport { getSudokuBoard, validate} from '../store/actions/sudokuActions'\n\n\nexport const Home = () => {\n  const dispatch = useDispatch()\n  const {sudokuBoard, result} = useSelector(state => state.sudokuReducers)\n  const [getBoard, setBoard] = useState([])\n\n  useEffect( () => {\n    dispatch(getSudokuBoard())\n  },[dispatch])\n\n  useEffect( () => {\n    setBoard(sudokuBoard)\n  },[sudokuBoard])\n\n  useEffect( () => {\n    if(result){\n      alert(result.status)\n    }\n  },[result])\n  \n\n  if(getBoard.length === 0 ) {\n    return <Text> please wait ..</Text>\n  }\n   \n  const handleOnChange = (e,row, col) => {\n    const {value} = e.target\n    const newBoard =getBoard\n    newBoard.board[row][col] = +value\n    setBoard(newBoard)\n  }\n  \n  const chooseDifficulty = (difficulty)  => {\n    console.log(difficulty)\n    dispatch(getSudokuBoard(difficulty))\n  }\n\n  const validateSudoku = () =>{\n    console.log(getBoard,\"getBoard\")\n    dispatch(validate(getBoard))\n  }\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      <Text style={styles.title}> Welcome to SUDOKU </Text>\n      <View style={styles.wrapper}>\n        <View style={styles.buttonDiff}>\n          <Button color=\"red\" onPress={()=>  chooseDifficulty(\"easy\")} title=\"Easy\"/>\n        </View>\n        <View style={styles.buttonDiff}>\n          <Button color=\"red\" onPress={()=>  chooseDifficulty(\"medium\")} title=\"Medium\"/>\n        </View>\n        <View style={styles.buttonDiff}>\n          <Button color=\"red\" onPress={()=>  chooseDifficulty(\"hard\")} title=\"Hard\"/>\n        </View>\n      </View>\n\n      {getBoard.board? \n        <View style={styles.wrapper}>\n          { \n          // !boardUpdate &&\n          getBoard.board.map((board, row) => {\n            return (\n              <View key={`${row}`}>\n                {board.map((item, col) => {\n                    return (\n                      <>\n                      {item === 0 ? \n                        <TextInput key={`${col}`} defaultValue=\"\" \n                        onChange={(e) => handleOnChange(e,row, col)} style={styles.box}\n                        /> \n                      : \n                        <TextInput key={`${col}`} value={`${item}`} editable={false}\n                        onChange={(e) => handleOnChange(e,row, col)} style={styles.boxFix}\n                        /> \n                      }\n                      \n                        {(col + 1) % 9 == 0 ? \n                          <br/>\n                          :\n                          null\n                        }\n                      </>\n                    )\n                  \n                  })\n                  \n                }\n                </View>\n                )}\n              )\n              \n            }\n        </View>\n        :\n        null\n      }\n      <Button onPress={()=>  validateSudoku()} title=\"Validate\"/>\n      <StatusBar style=\"auto\" />\n    </ScrollView>\n  )\n}\n\nconst widthWindows = Dimensions.get(\"window\").width\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#40407a'\n  },\n  box: {\n    textAlign:'center', \n    width: (widthWindows-30)/9, \n    height: 30, \n    borderWidth:1,\n    borderColor:'grey'  \n  },\n  boxFix: {\n    textAlign:'center', \n    width: (widthWindows-30)/9, \n    height: 30, \n    borderWidth:1,\n    borderColor:'grey',\n    color: 'red'\n  },\n  buttonDiff: {\n    marginLeft: 5,\n    marginRight: 5\n  },\n  wrapper: {\n    flexDirection: \"row\",\n    marginBottom: 5,\n    marginTop: 5\n  },\n  title: {\n    color: '#f7f1e3',\n    fontSize: 20,\n    marginBottom: 20,\n    borderBottomColor: \"white\",\n    borderBottomWidth: 1,\n  }\n});"]},"metadata":{},"sourceType":"module"}