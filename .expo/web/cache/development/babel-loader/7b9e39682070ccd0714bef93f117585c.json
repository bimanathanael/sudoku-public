{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/bimanathan/Documents/HACKTIV8/3-phase/2-week/1-day/sugoku/components/Board.js\";\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport { getSudokuBoard, validate } from \"../store/actions/sudokuActions\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nexport var Board = function Board(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  console.log(navigation, 'navigation');\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      getBoard = _useState2[0],\n      setBoard = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      getResult = _useState4[0],\n      setResult = _useState4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.sudokuReducers;\n  }),\n      result = _useSelector.result;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.sudokuReducers;\n  }),\n      sudokuBoard = _useSelector2.sudokuBoard;\n\n  useEffect(function () {\n    console.log(\"useEffect kedua\");\n    setBoard(JSON.parse(JSON.stringify(sudokuBoard)));\n  }, [sudokuBoard]);\n\n  var handleOnChange = function handleOnChange(e, row, col) {\n    var value = e.target.value;\n    console.log(value, '<<value');\n\n    var newBoard = _toConsumableArray(getBoard);\n\n    newBoard[row][col] = +value;\n    console.log(newBoard, '<<newBoard');\n    setBoard(newBoard);\n  };\n\n  if (getBoard.length > 0 && sudokuBoard.length > 0) {\n    console.log(\"getBoard\", getBoard);\n    console.log(\"sudokuBoard>>\", sudokuBoard);\n  }\n\n  useEffect(function () {\n    console.log(\"useEffect ketiga\");\n\n    if (result) {\n      navigation.navigate(\"Finish\", {\n        result: getResult\n      });\n    }\n  }, [result]);\n\n  var validateSudoku = function validateSudoku() {\n    console.log(getBoard, \"getBoard\");\n    dispatch(validate(getBoard));\n  };\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.wrapperBoard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, getBoard.map(function (board, row) {\n    return React.createElement(View, {\n      key: \"\" + row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, board.map(function (item, col) {\n      return React.createElement(React.Fragment, null, React.createElement(TextInput, {\n        key: \"\" + col,\n        value: item == 0 ? \"\" : \"\" + item,\n        onChange: function onChange(e) {\n          return handleOnChange(e, row, col);\n        },\n        style: styles.box,\n        maxLength: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }));\n    }));\n  })), React.createElement(View, {\n    style: styles.validateBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    color: \"#706fd3\",\n    style: styles.validateBtn,\n    onPress: function onPress() {\n      validateSudoku();\n    },\n    title: \"Validate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  })));\n};\nvar widthWindows = Dimensions.get(\"window\").width;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#40407a'\n  },\n  box: {\n    textAlign: 'center',\n    width: (widthWindows - 30) / 9,\n    height: 30,\n    color: 'black',\n    borderWidth: 1,\n    borderColor: '#2c2c54'\n  },\n  boxFix: {\n    textAlign: 'center',\n    width: (widthWindows - 30) / 9,\n    height: 30,\n    borderWidth: 1,\n    borderColor: '#2c2c54',\n    color: 'red'\n  },\n  buttonDiff: {\n    marginLeft: 5,\n    marginRight: 5\n  },\n  wrapper: {\n    flexDirection: \"row\",\n    marginBottom: 5,\n    marginTop: 5\n  },\n  wrapperBoard: {\n    flexDirection: \"row\",\n    marginBottom: 5,\n    marginTop: 5,\n    backgroundColor: '#d1ccc0',\n    padding: 5\n  },\n  title: {\n    color: '#f7f1e3',\n    fontSize: 20,\n    marginBottom: 20,\n    borderBottomColor: \"#ff793f\",\n    borderBottomWidth: 3,\n    textAlign: \"center\"\n  },\n  validateBtn: {\n    marginTop: 10,\n    borderTopColor: \"#ff793f\",\n    borderTopWidth: 3\n  }\n});","map":{"version":3,"sources":["/home/bimanathan/Documents/HACKTIV8/3-phase/2-week/1-day/sugoku/components/Board.js"],"names":["Provider","useDispatch","useSelector","getSudokuBoard","validate","React","useEffect","useState","Board","navigation","dispatch","console","log","getBoard","setBoard","getResult","setResult","state","sudokuReducers","result","sudokuBoard","JSON","parse","stringify","handleOnChange","e","row","col","value","target","newBoard","length","navigate","validateSudoku","styles","wrapperBoard","map","board","item","box","validateBtn","widthWindows","Dimensions","get","width","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","textAlign","height","color","borderWidth","borderColor","boxFix","buttonDiff","marginLeft","marginRight","wrapper","flexDirection","marginBottom","marginTop","padding","title","fontSize","borderBottomColor","borderBottomWidth","borderTopColor","borderTopWidth"],"mappings":"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","sourcesContent":["import { Provider, useDispatch, useSelector } from 'react-redux'\nimport { getSudokuBoard, validate} from '../store/actions/sudokuActions'\nimport React , { useEffect, useState } from 'react'\nimport { StyleSheet, Text, View, ScrollView, TextInput, Dimensions, Button } from 'react-native';\n\nexport const Board = ({navigation}) =>{\n  const dispatch = useDispatch()\n  console.log(navigation,'navigation')\n  const [getBoard, setBoard] = useState([])\n  // const [getBoardOrigin, setBoardOrigin] = useState([])\n  const [getResult, setResult] = useState(\"\")\n  const { result} = useSelector(state => state.sudokuReducers)\n  const {sudokuBoard} = useSelector(state => state.sudokuReducers)\n  \n  \n  useEffect( () => {\n    console.log(\"useEffect kedua\")\n    setBoard(JSON.parse(JSON.stringify(sudokuBoard)))\n    // setBoardOrigin(sudokuBoard)\n  },[sudokuBoard])\n  \n  const handleOnChange = (e,row, col) => {\n    const {value} = e.target\n    console.log(value,'<<value')\n    const newBoard = [...getBoard]\n    newBoard[row][col] = +value\n    console.log(newBoard,'<<newBoard')\n    setBoard(newBoard)\n  }\n  \n  if(getBoard.length>0 && sudokuBoard.length >0 ){\n    console.log(\"getBoard\", getBoard)\n    console.log(\"sudokuBoard>>\",sudokuBoard)\n  }\n  \n  useEffect( () => {\n    console.log(\"useEffect ketiga\")\n    if(result){\n        navigation.navigate(\"Finish\",{\n          result: getResult\n        })\n    }\n  },[result])\n\n  const validateSudoku  = () =>{\n    console.log(getBoard,\"getBoard\")\n    dispatch(validate(getBoard))\n  }\n\n  return (\n    <View>\n      <View  style={styles.wrapperBoard}>\n        { getBoard.map((board, row) => {\n          return (\n            <View key={`${row}`}>\n              {board.map((item, col) => {\n                  return (\n                    <>\n                    <TextInput key={`${col}`} value={\n                      item == 0 ? \"\" : `${item}`\n                    } \n                      onChange={(e) => handleOnChange(e,row, col)} style={styles.box}\n                      maxLength={1}\n                      /> \n                    {/* {\n                    sudokuBoard[row][col] == 0 ? \n                      <TextInput key={`${col}`} value=\"\" \n                      onChange={(e) => handleOnChange(e,row, col)} style={styles.box}\n                      maxLength={1}\n                      /> \n                    : \n                      <TextInput key={`${col}`} value={`${item}`}\n                      onChange={(e) => handleOnChange(e,row, col)} editable={false} style={styles.boxFix}\n                      /> \n                    }\n                     */}\n                    </>\n                  )\n                \n                })\n                \n              }\n              </View>\n              )\n            })  \n          }      \n      </View>\n      <View style={styles.validateBtn}>\n        <Button color=\"#706fd3\" style={styles.validateBtn} onPress={ ()=>  {\n          validateSudoku()\n        }} title=\"Validate\"/>\n      </View>\n    </View> \n  )\n}\n\nconst widthWindows = Dimensions.get(\"window\").width\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#40407a'\n  },\n  box: {\n    textAlign:'center', \n    width: (widthWindows-30)/9, \n    height: 30, \n    color: 'black',\n    borderWidth: 1,\n    borderColor:'#2c2c54'  \n  },\n  boxFix: {\n    textAlign:'center', \n    width: (widthWindows-30)/9, \n    height: 30, \n    borderWidth:1,\n    borderColor:'#2c2c54',\n    color: 'red'\n  },\n  buttonDiff: {\n    marginLeft: 5,\n    marginRight: 5\n  },\n  wrapper: {\n    flexDirection: \"row\",\n    marginBottom: 5,\n    marginTop: 5\n  },\n  wrapperBoard: {\n    flexDirection: \"row\",\n    marginBottom: 5,\n    marginTop: 5,\n    backgroundColor: '#d1ccc0',\n    padding: 5\n  },\n  title: {\n    color: '#f7f1e3',\n    fontSize: 20,\n    marginBottom: 20,\n    borderBottomColor: \"#ff793f\",\n    borderBottomWidth: 3,\n    textAlign: \"center\"\n  },\n  validateBtn:{\n    marginTop: 10,\n    borderTopColor: \"#ff793f\",\n    borderTopWidth: 3,\n  }\n});"]},"metadata":{},"sourceType":"module"}