{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/bimanathan/Documents/HACKTIV8/3-phase/2-week/1-day/sugoku/pages/Game.js\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport { StatusBar } from 'expo-status-bar';\nimport { getSudokuBoard, validate } from \"../store/actions/sudokuActions\";\nexport var Game = function Game(_ref) {\n  var params = _ref.route.params,\n      navigation = _ref.navigation;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.sudokuReducers;\n  }),\n      sudokuBoard = _useSelector.sudokuBoard,\n      result = _useSelector.result;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      getBoard = _useState2[0],\n      setBoard = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      getResult = _useState4[0],\n      setResult = _useState4[1];\n\n  useEffect(function () {\n    dispatch(getSudokuBoard());\n  }, [dispatch]);\n  useEffect(function () {\n    if (sudokuBoard.length != 0) {\n      setBoard(JSON.parse(JSON.stringify(sudokuBoard.board)));\n    }\n  }, [sudokuBoard]);\n  useEffect(function () {\n    if (result) {\n      setResult(result.status);\n      alert(result.status);\n    }\n  }, [result]);\n\n  if (getBoard.length === 0) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 12\n      }\n    }, \" please wait ..\");\n  }\n\n  var handleOnChange = function handleOnChange(e, row, col) {\n    var value = e.target.value;\n    console.log('masuk>>>>', value);\n    var newBoard = getBoard;\n    newBoard[row][col] = +value;\n    console.log(newBoard, \"<<<<newBoard\");\n    setBoard(newBoard);\n  };\n\n  var chooseDifficulty = function chooseDifficulty(difficulty) {\n    console.log(difficulty);\n    dispatch(getSudokuBoard(difficulty));\n  };\n\n  var validateSudoku = function validateSudoku() {\n    console.log(getBoard, \"getBoard\");\n    dispatch(validate(getBoard));\n  };\n\n  return React.createElement(ScrollView, {\n    contentContainerStyle: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \" Solve our SUDOKU, \", React.createElement(\"strong\", {\n    style: {\n      color: \"#ffb142\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 53\n    }\n  }, \" \", params.name, \" \"), \"! \"), React.createElement(View, {\n    style: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.buttonDiff,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    color: \"#ffb142\",\n    onPress: function onPress() {\n      return chooseDifficulty(\"easy\");\n    },\n    title: \"Easy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.buttonDiff,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    color: \"#ff793f\",\n    onPress: function onPress() {\n      return chooseDifficulty(\"medium\");\n    },\n    title: \"Medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.buttonDiff,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    color: \"#ff5252\",\n    onPress: function onPress() {\n      return chooseDifficulty(\"hard\");\n    },\n    title: \"Hard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }))), React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \" \", JSON.stringify(getBoard), \" \"), getBoard ? React.createElement(View, {\n    style: styles.wrapperBoard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, getBoard.map(function (board, row) {\n    return React.createElement(View, {\n      key: \"\" + row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, board.map(function (item, col) {\n      return React.createElement(React.Fragment, null, console.log(item, \"item<<<\"), React.createElement(TextInput, {\n        key: \"\" + col,\n        onChange: function onChange(e) {\n          return handleOnChange(e, row, col);\n        },\n        style: styles.box,\n        maxLength: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      }, item > 0 ? null : React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }\n      }, \" \", item, \" \")));\n    }));\n  })) : null, React.createElement(View, {\n    style: styles.validateBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    color: \"#706fd3\",\n    style: styles.validateBtn,\n    onPress: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(validateSudoku());\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    title: \"Validate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  })), React.createElement(StatusBar, {\n    style: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }));\n};\nvar widthWindows = Dimensions.get(\"window\").width;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#40407a'\n  },\n  box: {\n    textAlign: 'center',\n    width: (widthWindows - 30) / 9,\n    height: 30,\n    borderWidth: 1,\n    borderColor: '#2c2c54'\n  },\n  boxFix: {\n    textAlign: 'center',\n    width: (widthWindows - 30) / 9,\n    height: 30,\n    borderWidth: 1,\n    borderColor: '#2c2c54',\n    color: '#b33939'\n  },\n  buttonDiff: {\n    marginLeft: 5,\n    marginRight: 5\n  },\n  wrapper: {\n    flexDirection: \"row\",\n    marginBottom: 5,\n    marginTop: 5\n  },\n  wrapperBoard: {\n    flexDirection: \"row\",\n    marginBottom: 5,\n    marginTop: 5,\n    backgroundColor: '#d1ccc0',\n    padding: 5\n  },\n  title: {\n    color: '#f7f1e3',\n    fontSize: 20,\n    marginBottom: 20,\n    borderBottomColor: \"#ff793f\",\n    borderBottomWidth: 3,\n    textAlign: \"center\"\n  },\n  validateBtn: {\n    marginTop: 10,\n    borderTopColor: \"#ff793f\",\n    borderTopWidth: 3\n  }\n});","map":{"version":3,"sources":["/home/bimanathan/Documents/HACKTIV8/3-phase/2-week/1-day/sugoku/pages/Game.js"],"names":["React","useEffect","useState","Provider","useDispatch","useSelector","StatusBar","getSudokuBoard","validate","Game","params","route","navigation","dispatch","state","sudokuReducers","sudokuBoard","result","getBoard","setBoard","getResult","setResult","length","JSON","parse","stringify","board","status","alert","handleOnChange","e","row","col","value","target","console","log","newBoard","chooseDifficulty","difficulty","validateSudoku","styles","container","title","color","name","wrapper","buttonDiff","wrapperBoard","map","item","box","validateBtn","widthWindows","Dimensions","get","width","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","textAlign","height","borderWidth","borderColor","boxFix","marginLeft","marginRight","flexDirection","marginBottom","marginTop","padding","fontSize","borderBottomColor","borderBottomWidth","borderTopColor","borderTopWidth"],"mappings":"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","sourcesContent":["import React , { useEffect, useState } from 'react'\nimport { StyleSheet, Text, View, ScrollView, TextInput, Dimensions, Button } from 'react-native';\nimport { Provider, useDispatch, useSelector } from 'react-redux'\nimport { StatusBar } from 'expo-status-bar';\nimport { getSudokuBoard, validate} from '../store/actions/sudokuActions'\n\n\nexport const Game = ({route: {params}, navigation}) => {\n  const dispatch = useDispatch()\n  const {sudokuBoard, result} = useSelector(state => state.sudokuReducers)\n  const [getBoard, setBoard] = useState([])\n  const [getResult, setResult] = useState(\"\")\n  \n  useEffect( () => {\n    dispatch(getSudokuBoard())\n  },[dispatch])\n\n  useEffect( () => {\n    if(sudokuBoard.length != 0  ){\n      setBoard(JSON.parse(JSON.stringify(sudokuBoard.board)))\n    }\n  },[sudokuBoard])\n\n  useEffect( () => {\n    if(result){\n      setResult(result.status)\n      alert(result.status)\n    }\n  },[result])\n  \n\n  if(getBoard.length === 0 ) {\n    return <Text> please wait ..</Text>\n  }\n   \n  const handleOnChange = (e,row, col) => {\n    const {value} = e.target\n    console.log('masuk>>>>', value)\n    const newBoard = getBoard\n    newBoard[row][col] = +value\n    console.log(newBoard, \"<<<<newBoard\")\n    setBoard(newBoard)\n  }\n  \n  const chooseDifficulty = (difficulty)  => {\n    console.log(difficulty)\n    dispatch(getSudokuBoard(difficulty))\n  }\n\n  const validateSudoku  = () =>{\n    console.log(getBoard,\"getBoard\")\n    dispatch(validate(getBoard))\n  }\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      <Text style={styles.title}> Solve our SUDOKU, <strong style={{color:\"#ffb142\"}}> {params.name} </strong>! </Text>\n      <View style={styles.wrapper}>\n        <View style={styles.buttonDiff}>\n          <Button color=\"#ffb142\" onPress={() => chooseDifficulty(\"easy\")} title=\"Easy\"/>\n        </View>\n        <View style={styles.buttonDiff}>\n          <Button color=\"#ff793f\" onPress={() => chooseDifficulty(\"medium\")} title=\"Medium\"/>\n        </View>\n        <View style={styles.buttonDiff}>\n          <Button color=\"#ff5252\" onPress={() => chooseDifficulty(\"hard\")} title=\"Hard\"/>\n        </View>\n      </View>\n      <Text style={{color: \"white\"}}> {JSON.stringify(getBoard)} </Text>\n      {getBoard? \n        <View style={styles.wrapperBoard}>\n          { \n          // !boardUpdate &&\n          getBoard.map((board, row) => {\n            return (\n              <View key={`${row}`}>\n                {board.map((item, col) => {\n                    return (\n                      <>\n                      {console.log(item, \"item<<<\")}\n                      {/* { item === 0 ?  */}\n                        <TextInput key={`${col}`} \n                        // defaultValue={\n                        //   item === 0 ? \n                        //   \"\"\n                        //   :\n                        //   `${String(item)}`\n                        // }\n                        onChange={(e) => handleOnChange(e,row, col)} style={styles.box}\n                        maxLength={1}\n                        >\n                          { item > 0 ?\n                            null\n                            :\n                            <Text> {item} </Text>\n                          }\n                        </TextInput> \n                      {/* :  */}\n                        {/* <TextInput key={`${col}`} value={`${item}`} editable={false}\n                        onChange={(e) => handleOnChange(e,row, col)} style={styles.boxFix}\n                        />  */}\n                      {/* } */}\n                      \n                      </>\n                    )\n                  \n                  })\n                  \n                }\n                </View>\n                )}\n              )\n              \n            }\n        </View>\n        :\n        null\n      }\n      <View style={styles.validateBtn}>\n        <Button color=\"#706fd3\" style={styles.validateBtn} onPress={ async ()=>  {\n          await validateSudoku()\n          // navigation.navigate(\"Finish\",{\n          //   result: getResult\n          // })\n        }} title=\"Validate\"/>\n      </View>\n      <StatusBar style=\"auto\" />\n    </ScrollView>\n  )\n}\n\nconst widthWindows = Dimensions.get(\"window\").width\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#40407a'\n  },\n  box: {\n    textAlign:'center', \n    width: (widthWindows-30)/9, \n    height: 30, \n    borderWidth:1,\n    borderColor:'#2c2c54'  \n  },\n  boxFix: {\n    textAlign:'center', \n    width: (widthWindows-30)/9, \n    height: 30, \n    borderWidth:1,\n    borderColor:'#2c2c54',\n    color: '#b33939'\n  },\n  buttonDiff: {\n    marginLeft: 5,\n    marginRight: 5\n  },\n  wrapper: {\n    flexDirection: \"row\",\n    marginBottom: 5,\n    marginTop: 5\n  },\n  wrapperBoard: {\n    flexDirection: \"row\",\n    marginBottom: 5,\n    marginTop: 5,\n    backgroundColor: '#d1ccc0',\n    padding: 5\n  },\n  title: {\n    color: '#f7f1e3',\n    fontSize: 20,\n    marginBottom: 20,\n    borderBottomColor: \"#ff793f\",\n    borderBottomWidth: 3,\n    textAlign: \"center\"\n  },\n  validateBtn:{\n    marginTop: 10,\n    borderTopColor: \"#ff793f\",\n    borderTopWidth: 3,\n  }\n});"]},"metadata":{},"sourceType":"module"}