{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/bimanathan/Documents/HACKTIV8/3-phase/2-week/1-day/sugoku/components/Board.js\";\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport { giveUp, validate } from \"../store/actions/sudokuActions\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useNavigation } from '@react-navigation/native';\nexport var Board = function Board() {\n  var dispatch = useDispatch();\n  var navigation = useNavigation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      getBoard = _useState2[0],\n      setBoard = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      getResult = _useState4[0],\n      setResult = _useState4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.sudokuReducers;\n  }),\n      result = _useSelector.result;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.sudokuReducers;\n  }),\n      sudokuBoard = _useSelector2.sudokuBoard;\n\n  useEffect(function () {\n    setBoard(JSON.parse(JSON.stringify(sudokuBoard)));\n  }, [sudokuBoard]);\n\n  var handleOnChange = function handleOnChange(e, row, col) {\n    var value = e.target.value;\n\n    var newBoard = _toConsumableArray(getBoard);\n\n    newBoard[row][col] = +value;\n    setBoard(newBoard);\n  };\n\n  useEffect(function () {\n    if (result) {\n      if (result.status == \"solved\") {\n        navigation.navigate(\"Finish\");\n      } else {\n        alert(\"not solved\");\n      }\n    }\n  }, [result]);\n\n  var validateSudoku = function validateSudoku() {\n    dispatch(validate(getBoard));\n  };\n\n  var doGiveUp = function doGiveUp() {\n    dispatch(giveUp(getBoard));\n  };\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.wrapperBoard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, getBoard.map(function (board, row) {\n    return React.createElement(View, {\n      key: \"\" + row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, board.map(function (item, col) {\n      return React.createElement(React.Fragment, null, React.createElement(TextInput, {\n        key: \"\" + col,\n        value: item == 0 ? \"\" : \"\" + item,\n        onChange: function onChange(e) {\n          return handleOnChange(e, row, col);\n        },\n        style: sudokuBoard[row][col] == 0 ? styles.box : styles.boxFix,\n        maxLength: 1,\n        editable: sudokuBoard[row][col] == 0 ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }));\n    }));\n  })), React.createElement(View, {\n    style: styles.btnBottom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.validateBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    color: \"#706fd3\",\n    style: styles.validateBtn,\n    onPress: function onPress() {\n      validateSudoku();\n    },\n    title: \"Validate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.giveUpBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    color: \"#ff793f\",\n    style: styles.giveUpBtn,\n    onPress: function onPress() {\n      doGiveUp();\n    },\n    title: \"Give Up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }))));\n};\nvar widthWindows = Dimensions.get(\"window\").width;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#40407a'\n  },\n  box: {\n    textAlign: 'center',\n    width: (widthWindows - 30) / 9,\n    height: 30,\n    color: 'black',\n    borderWidth: 1,\n    borderColor: '#2c2c54'\n  },\n  boxFix: {\n    textAlign: 'center',\n    width: (widthWindows - 30) / 9,\n    height: 30,\n    borderWidth: 1,\n    borderColor: '#2c2c54',\n    color: 'white',\n    backgroundColor: \"#ff793f\"\n  },\n  buttonDiff: {\n    marginLeft: 5,\n    marginRight: 5\n  },\n  wrapper: {\n    flexDirection: \"row\",\n    marginBottom: 5,\n    marginTop: 5\n  },\n  wrapperBoard: {\n    flexDirection: \"row\",\n    marginBottom: 5,\n    marginTop: 5,\n    backgroundColor: '#fbf9f5',\n    padding: 5\n  },\n  title: {\n    color: '#f7f1e3',\n    fontSize: 20,\n    marginBottom: 20,\n    borderBottomColor: \"#ff793f\",\n    borderBottomWidth: 3,\n    textAlign: \"center\"\n  },\n  validateBtn: {\n    marginTop: 10,\n    borderTopColor: \"#ff793f\",\n    borderTopWidth: 4\n  },\n  giveUpBtn: {\n    marginTop: 10,\n    borderTopColor: \"#706fd3\",\n    borderTopWidth: 4,\n    marginLeft: 10\n  },\n  btnBottom: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: widthWindows - 600\n  }\n});","map":{"version":3,"sources":["/home/bimanathan/Documents/HACKTIV8/3-phase/2-week/1-day/sugoku/components/Board.js"],"names":["Provider","useDispatch","useSelector","giveUp","validate","React","useEffect","useState","useNavigation","Board","dispatch","navigation","getBoard","setBoard","getResult","setResult","state","sudokuReducers","result","sudokuBoard","JSON","parse","stringify","handleOnChange","e","row","col","value","target","newBoard","status","navigate","alert","validateSudoku","doGiveUp","styles","wrapperBoard","map","board","item","box","boxFix","btnBottom","validateBtn","giveUpBtn","widthWindows","Dimensions","get","width","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","textAlign","height","color","borderWidth","borderColor","buttonDiff","marginLeft","marginRight","wrapper","flexDirection","marginBottom","marginTop","padding","title","fontSize","borderBottomColor","borderBottomWidth","borderTopColor","borderTopWidth"],"mappings":"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","sourcesContent":["import { Provider, useDispatch, useSelector } from 'react-redux'\nimport { giveUp, validate} from '../store/actions/sudokuActions'\nimport React , { useEffect, useState } from 'react'\nimport { StyleSheet, Text, View, ScrollView, TextInput, Dimensions, Button } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nexport const Board = () =>{\n  const dispatch = useDispatch()\n  const navigation = useNavigation()\n  const [getBoard, setBoard] = useState([])\n  // const [getBoardOrigin, setBoardOrigin] = useState([])\n  const [getResult, setResult] = useState(\"\")\n  const { result} = useSelector(state => state.sudokuReducers)\n  const {sudokuBoard} = useSelector(state => state.sudokuReducers)\n  \n  \n  useEffect( () => {\n    setBoard(JSON.parse(JSON.stringify(sudokuBoard)))\n    // setBoardOrigin(sudokuBoard)\n  },[sudokuBoard])\n  \n  const handleOnChange = (e,row, col) => {\n    const {value} = e.target\n    const newBoard = [...getBoard]\n    newBoard[row][col] = +value\n    setBoard(newBoard)\n  }\n  \n  useEffect( () => {\n    if(result){\n        if (result.status == \"solved\"){\n          navigation.navigate(\"Finish\")\n        }\n        else{\n          alert(\"not solved\")\n        }\n    }\n  },[result])\n\n  const validateSudoku = () =>{\n    dispatch(validate(getBoard))\n  }\n\n  const doGiveUp = () => {\n    dispatch(giveUp(getBoard))\n  }\n\n  return (\n    <View>\n      <View  style={styles.wrapperBoard}>\n        { getBoard.map((board, row) => {\n          return (\n            <View key={`${row}`}>\n              {board.map((item, col) => {\n                  return (\n                    <>\n                    <TextInput key={`${col}`} value={\n                      item == 0 ? \"\" : `${item}`\n                    } \n                      onChange={(e) => handleOnChange(e,row, col)} style={\n                        sudokuBoard[row][col] == 0 ? styles.box : styles.boxFix\n                      }\n                      maxLength={1} \n                      editable={ sudokuBoard[row][col] == 0 ? true : false  }\n                      /> \n                    </>\n                  )\n                })\n                \n              }\n              </View>\n              )\n            })  \n          }      \n      </View>\n      <View style={styles.btnBottom}>\n        <View style={styles.validateBtn}>\n          <Button color=\"#706fd3\" style={styles.validateBtn} onPress={ ()=>  {\n            validateSudoku()\n          }} title=\"Validate\"/>\n        </View>\n        <View style={styles.giveUpBtn}>\n          <Button color=\"#ff793f\" style={styles.giveUpBtn} onPress={ ()=>  {\n            doGiveUp()\n          }} title=\"Give Up\"/>\n        </View>\n      </View>\n    </View> \n  )\n}\n\nconst widthWindows = Dimensions.get(\"window\").width\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#40407a'\n  },\n  box: {\n    textAlign:'center', \n    width: (widthWindows-30)/9, \n    height: 30, \n    color: 'black',\n    borderWidth: 1,\n    borderColor:'#2c2c54'  \n  },\n  boxFix: {\n    textAlign:'center', \n    width: (widthWindows-30)/9, \n    height: 30, \n    borderWidth:1,\n    borderColor:'#2c2c54',\n    color: 'white',\n    backgroundColor: \"#ff793f\",\n  },\n  buttonDiff: {\n    marginLeft: 5,\n    marginRight: 5\n  },\n  wrapper: {\n    flexDirection: \"row\",\n    marginBottom: 5,\n    marginTop: 5\n  },\n  wrapperBoard: {\n    flexDirection: \"row\",\n    marginBottom: 5,\n    marginTop: 5,\n    backgroundColor: '#fbf9f5',\n    padding: 5\n  },\n  title: {\n    color: '#f7f1e3',\n    fontSize: 20,\n    marginBottom: 20,\n    borderBottomColor: \"#ff793f\",\n    borderBottomWidth: 3,\n    textAlign: \"center\"\n  },\n  validateBtn:{\n    marginTop: 10,\n    borderTopColor: \"#ff793f\",\n    borderTopWidth: 4,\n  },\n  giveUpBtn:{\n    marginTop: 10,\n    borderTopColor: \"#706fd3\",\n    borderTopWidth: 4,\n    marginLeft: 10\n  },\n  btnBottom: {\n    flex: 1, \n    flexDirection: 'row', \n    alignItems:'center', \n    justifyContent: 'center', \n    marginTop: widthWindows-600,\n  }\n});"]},"metadata":{},"sourceType":"module"}