{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/bimanathan/Documents/HACKTIV8/3-phase/2-week/1-day/sugoku/pages/Home.js\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport { StatusBar } from 'expo-status-bar';\nimport { getSudokuBoard } from \"../store/actions/sudokuActions\";\nexport var Home = function Home() {\n  var dispatch = useDispatch();\n  var boardGame = [];\n\n  var _useSelector = useSelector(function (state) {\n    return state.sudokuReducers;\n  }),\n      sudokuBoard = _useSelector.sudokuBoard;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      getBoard = _useState2[0],\n      setBoard = _useState2[1];\n\n  useEffect(function () {\n    dispatch(getSudokuBoard());\n  }, [dispatch]);\n  useEffect(function () {\n    setBoard(sudokuBoard.board);\n  }, [sudokuBoard]);\n\n  if (sudokuBoard.length === 0) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 12\n      }\n    }, \" please wait ..\");\n  } else {\n    console.log(sudokuBoard.board, 'sudokuBoard.board');\n\n    for (var i = 0; i < sudokuBoard.board.length; i++) {\n      for (var j = 0; j < sudokuBoard.board[i].length; j++) {\n        boardGame.push(sudokuBoard.board[i][j]);\n        console.log(sudokuBoard.board[i][j], 'sudokuBoard[i][j]');\n      }\n\n      console.log(boardGame, 'boardGame');\n    }\n  }\n\n  return React.createElement(View, {\n    contentContainerStyle: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \" ini home \"), getBoard ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, boardGame.map(function (item, idx) {\n    if ((idx + 1) % 9 == 0) {\n      return React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n        style: {\n          borderWidth: 1,\n          borderColor: 'grey',\n          width: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 23\n        }\n      }, React.createElement(TextInput, {\n        key: idx,\n        value: \"\" + item,\n        style: {\n          width: 10,\n          margin: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 23\n        }\n      }));\n    } else {\n      return React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n        style: {\n          borderWidth: 1,\n          borderColor: 'grey',\n          width: 29\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 23\n        }\n      }, React.createElement(TextInput, {\n        key: idx,\n        value: \"\" + item,\n        style: {\n          width: 20,\n          margin: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      })));\n    }\n  })) : null, React.createElement(StatusBar, {\n    style: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/bimanathan/Documents/HACKTIV8/3-phase/2-week/1-day/sugoku/pages/Home.js"],"names":["React","useEffect","useState","Provider","useDispatch","useSelector","StatusBar","getSudokuBoard","Home","dispatch","boardGame","state","sudokuReducers","sudokuBoard","getBoard","setBoard","board","length","console","log","i","j","push","styles","container","map","item","idx","borderWidth","borderColor","width","margin","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React , { useEffect, useState } from 'react'\nimport { StyleSheet, Text, View, ScrollView, TextInput } from 'react-native';\nimport { Provider, useDispatch, useSelector } from 'react-redux'\nimport { StatusBar } from 'expo-status-bar';\nimport { getSudokuBoard} from '../store/actions/sudokuActions'\n\n\nexport const Home = () => {\n  const dispatch = useDispatch()\n  const boardGame = []\n  const {sudokuBoard} = useSelector(state => state.sudokuReducers)\n  const [getBoard, setBoard] = useState([])\n\n  useEffect( () => {\n    dispatch(getSudokuBoard())\n  },[dispatch])\n\n  useEffect( () => {\n    setBoard(sudokuBoard.board)\n  },[sudokuBoard])\n\n  if(sudokuBoard.length === 0 ) {\n    return <Text> please wait ..</Text>\n  } else {\n    console.log(sudokuBoard.board, 'sudokuBoard.board')\n    for( let i = 0 ; i < sudokuBoard.board.length ; i++){\n      for( let j = 0 ; j < sudokuBoard.board[i].length ; j++){\n        boardGame.push(sudokuBoard.board[i][j])\n        console.log(sudokuBoard.board[i][j], 'sudokuBoard[i][j]')\n      }\n      console.log(boardGame, 'boardGame')\n    }\n  }\n\n  return (\n    <View contentContainerStyle={styles.container}>\n      <Text> ini home </Text>\n      {getBoard ? \n        <div>\n          { \n            boardGame.map((item, idx) => {\n                if((idx + 1) % 9 == 0){\n                  return (\n                    <>\n                      <ScrollView style={{borderWidth: 1, borderColor: 'grey', width: 10}}>\n                        <TextInput key={idx} value={`${item}`} style= {{ width: 10 , margin:5 }}/> \n                      </ScrollView>\n                      <br/>\n                    </>\n                  )\n                } else {\n                  return (\n                    <>\n                      <ScrollView style={{borderWidth: 1, borderColor: 'grey', width: 29}}>\n                        <TextInput key={idx} value={`${item}`} style= {{ width: 20 , margin:5 }}/> \n                      </ScrollView>\n                    </>\n                  )\n                }\n              })\n            }\n        </div>\n        :\n        null\n      }\n      <StatusBar style=\"auto\" />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});"]},"metadata":{},"sourceType":"module"}