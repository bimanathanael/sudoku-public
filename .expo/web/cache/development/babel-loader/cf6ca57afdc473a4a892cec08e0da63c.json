{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/bimanathan/Documents/HACKTIV8/3-phase/2-week/1-day/sugoku/pages/Home.js\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport { StatusBar } from 'expo-status-bar';\nimport { getSudokuBoard } from \"../store/actions/sudokuActions\";\nexport var Home = function Home() {\n  var dispatch = useDispatch();\n  var boardGame = [];\n\n  var _useSelector = useSelector(function (state) {\n    return state.sudokuReducers;\n  }),\n      sudokuBoard = _useSelector.sudokuBoard;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      board = _useState2[0],\n      setBoard = _useState2[1];\n\n  useEffect(function () {\n    dispatch(getSudokuBoard());\n  }, [dispatch]);\n  useEffect(function () {\n    console.log('masuk', sudokuBoard);\n    setBoard(sudokuBoard);\n  }, [sudokuBoard]);\n\n  if (sudokuBoard.length == 0) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }\n    }, \" please wait ..\");\n  } else {\n    for (var i = 0; i < sudokuBoard.board.length; i++) {\n      for (var j = 0; j < sudokuBoard.board[i].length; j++) {\n        boardGame.push(sudokuBoard.board[i][j]);\n      }\n    }\n\n    console.log(boardGame, 'board');\n  }\n\n  return React.createElement(ScrollView, {\n    contentContainerStyle: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \" ini home \"), sudokuBoard ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, board.map(function (item, idx) {\n    return React.createElement(TextInput, {\n      key: idx,\n      value: \"\" + item,\n      style: {\n        width: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 24\n      }\n    });\n  })) : null, React.createElement(StatusBar, {\n    style: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/bimanathan/Documents/HACKTIV8/3-phase/2-week/1-day/sugoku/pages/Home.js"],"names":["React","useEffect","useState","Provider","useDispatch","useSelector","StatusBar","getSudokuBoard","Home","dispatch","boardGame","state","sudokuReducers","sudokuBoard","board","setBoard","console","log","length","i","j","push","styles","container","map","item","idx","width","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,EAA4BC,QAA5B,QAA4C,OAA5C;;;;;;AAEA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC,QAAmD,aAAnD;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,cAAT;AAGA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACxB,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,MAAMM,SAAS,GAAG,EAAlB;;AAFwB,qBAGFL,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACC,cAAV;AAAA,GAAN,CAHT;AAAA,MAGjBC,WAHiB,gBAGjBA,WAHiB;;AAAA,kBAIEX,QAAQ,CAAC,EAAD,CAJV;AAAA;AAAA,MAIjBY,KAJiB;AAAA,MAIVC,QAJU;;AAMxBd,EAAAA,SAAS,CAAE,YAAM;AACfQ,IAAAA,QAAQ,CAACF,cAAc,EAAf,CAAR;AACD,GAFQ,EAEP,CAACE,QAAD,CAFO,CAAT;AAIAR,EAAAA,SAAS,CAAE,YAAM;AACfe,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBJ,WAApB;AACAE,IAAAA,QAAQ,CAACF,WAAD,CAAR;AACD,GAHQ,EAGP,CAACA,WAAD,CAHO,CAAT;;AAKA,MAAGA,WAAW,CAACK,MAAZ,IAAsB,CAAzB,EAA6B;AAC3B,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACD,GAFD,MAEO;AACL,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAiBA,CAAC,GAAGN,WAAW,CAACC,KAAZ,CAAkBI,MAAvC,EAAgDC,CAAC,EAAjD,EAAoD;AAClD,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAiBA,CAAC,GAAGP,WAAW,CAACC,KAAZ,CAAkBK,CAAlB,EAAqBD,MAA1C,EAAmDE,CAAC,EAApD,EAAuD;AACrDV,QAAAA,SAAS,CAACW,IAAV,CAAeR,WAAW,CAACC,KAAZ,CAAkBK,CAAlB,EAAqBC,CAArB,CAAf;AACD;AACF;;AACDJ,IAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ,EAAuB,OAAvB;AACD;;AAED,SACE,oBAAC,UAAD;AAAY,IAAA,qBAAqB,EAAEY,MAAM,CAACC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGV,WAAW,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIC,KAAK,CAACU,GAAN,CAAU,UAACC,IAAD,EAAOC,GAAP,EAAe;AACrB,WAAO,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,GAAhB;AAAqB,MAAA,KAAK,OAAKD,IAA/B;AAAuC,MAAA,KAAK,EAAG;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFH,CAFJ,CADU,GASV,IAXJ,EAaE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAiBD,CA3CM;AA6CP,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import React , { useEffect, useState } from 'react'\nimport { StyleSheet, Text, View, ScrollView, TextInput } from 'react-native';\nimport { Provider, useDispatch, useSelector } from 'react-redux'\nimport { StatusBar } from 'expo-status-bar';\nimport { getSudokuBoard} from '../store/actions/sudokuActions'\n\n\nexport const Home = () => {\n  const dispatch = useDispatch()\n  const boardGame = []\n  const {sudokuBoard} = useSelector(state => state.sudokuReducers)\n  const [board, setBoard] = useState([])\n\n  useEffect( () => {\n    dispatch(getSudokuBoard())\n  },[dispatch])\n\n  useEffect( () => {\n    console.log('masuk',sudokuBoard)\n    setBoard(sudokuBoard)\n  },[sudokuBoard])\n\n  if(sudokuBoard.length == 0 ) {\n    return <Text> please wait ..</Text>\n  } else {\n    for( let i = 0 ; i < sudokuBoard.board.length ; i++){\n      for( let j = 0 ; j < sudokuBoard.board[i].length ; j++){\n        boardGame.push(sudokuBoard.board[i][j])\n      }\n    }\n    console.log(boardGame, 'board')\n  }\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      <Text> ini home </Text>\n      {sudokuBoard ? \n        <div>\n          { \n            board.map((item, idx) => {\n                return <TextInput key={idx} value={`${item}`} style= {{ width: 10}}/> \n              })\n            }\n        </div>\n        :\n        null\n      }\n      <StatusBar style=\"auto\" />\n    </ScrollView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});"]},"metadata":{},"sourceType":"module"}