{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/bimanathan/Documents/HACKTIV8/3-phase/2-week/1-day/sugoku/pages/Home.js\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport { StatusBar } from 'expo-status-bar';\nimport { getSudokuBoard } from \"../store/actions/sudokuActions\";\nexport var Home = function Home() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.sudokuReducers;\n  }),\n      sudokuBoard = _useSelector.sudokuBoard;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      getBoard = _useState2[0],\n      setBoard = _useState2[1];\n\n  useEffect(function () {\n    dispatch(getSudokuBoard());\n  }, [dispatch]);\n  useEffect(function () {\n    setBoard(sudokuBoard);\n  }, [sudokuBoard]);\n\n  if (getBoard.length === 0) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 12\n      }\n    }, \" please wait ..\");\n  }\n\n  var handleOnChange = function handleOnChange(e, row, col) {\n    var value = e.target.value;\n    var newBoard = getBoard;\n    newBoard.board[row][col] = +value;\n    setBoard(newBoard);\n  };\n\n  var chooseDifficulty = function chooseDifficulty(difficulty) {\n    console.log(difficulty);\n    dispatch(getSudokuBoard(difficulty));\n  };\n\n  var validateSudoku = function validateSudoku() {\n    console.log(getBoard, \"getBoard\");\n    fetch('https://sugoku.herokuapp.com/validate', {\n      method: \"POST\",\n      body: JSON.stringify(getBoard),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (resp) {\n      return resp.json();\n    }).then(function (resp) {\n      return alert(resp.status);\n    });\n  };\n\n  return React.createElement(ScrollView, {\n    contentContainerStyle: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \" ini home \"), React.createElement(Button, {\n    onPress: function onPress() {\n      return chooseDifficulty(\"easy\");\n    },\n    title: \"Easy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return chooseDifficulty(\"medium\");\n    },\n    title: \"Medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return chooseDifficulty(\"hard\");\n    },\n    title: \"Hard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), getBoard.board ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, getBoard.board.map(function (board, row) {\n    return board.map(function (item, col) {\n      {\n        console.log(\"masuk nested looping \", item);\n      }\n      return React.createElement(React.Fragment, null, item === 0 ? React.createElement(TextInput, {\n        key: \"\" + col,\n        defaultValue: \"\",\n        onChange: function onChange(e) {\n          return handleOnChange(e, row, col);\n        },\n        style: styles.box,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 24\n        }\n      }) : React.createElement(TextInput, {\n        key: \"\" + col,\n        value: \"\" + item,\n        editable: false,\n        onChange: function onChange(e) {\n          return handleOnChange(e, row, col);\n        },\n        style: (styles.box, {\n          backgroundColor: 'red'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 23\n        }\n      }), (col + 1) % 9 == 0 ? React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }\n      }) : null);\n    });\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return validateSudoku();\n    },\n    title: \"Validate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  })) : null, React.createElement(StatusBar, {\n    style: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }));\n};\nvar widthWindows = Dimensions.get(\"window\").width;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  box: {\n    textAlign: 'center',\n    width: (widthWindows - 30) / 9,\n    height: 30,\n    borderWidth: 1,\n    borderColor: 'grey'\n  }\n});","map":{"version":3,"sources":["/home/bimanathan/Documents/HACKTIV8/3-phase/2-week/1-day/sugoku/pages/Home.js"],"names":["React","useEffect","useState","Provider","useDispatch","useSelector","StatusBar","getSudokuBoard","Home","dispatch","state","sudokuReducers","sudokuBoard","getBoard","setBoard","length","handleOnChange","e","row","col","value","target","newBoard","board","chooseDifficulty","difficulty","console","log","validateSudoku","fetch","method","body","JSON","stringify","headers","then","resp","json","alert","status","styles","container","map","item","box","backgroundColor","widthWindows","Dimensions","get","width","StyleSheet","create","flex","alignItems","justifyContent","textAlign","height","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import React , { useEffect, useState } from 'react'\nimport { StyleSheet, Text, View, ScrollView, TextInput, Dimensions, Button } from 'react-native';\nimport { Provider, useDispatch, useSelector } from 'react-redux'\nimport { StatusBar } from 'expo-status-bar';\nimport { getSudokuBoard} from '../store/actions/sudokuActions'\n\n\nexport const Home = () => {\n  const dispatch = useDispatch()\n  const {sudokuBoard} = useSelector(state => state.sudokuReducers)\n  const [getBoard, setBoard] = useState([])\n\n  useEffect( () => {\n    dispatch(getSudokuBoard())\n  },[dispatch])\n\n  useEffect( () => {\n    setBoard(sudokuBoard)\n  },[sudokuBoard])\n  \n\n  if(getBoard.length === 0 ) {\n    return <Text> please wait ..</Text>\n  }\n   \n  const handleOnChange = (e,row, col) => {\n    const {value} = e.target\n    const newBoard =getBoard\n    newBoard.board[row][col] = +value\n    setBoard(newBoard)\n  }\n  \n  const chooseDifficulty = (difficulty)  => {\n    console.log(difficulty)\n    dispatch(getSudokuBoard(difficulty))\n    // fetch(`https://sugoku.herokuapp.com/board?difficulty=${difficulty}`, {\n    //   method: \"GET\",\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //     },\n    // })\n    //   .then( resp => resp.json() )\n    //   .then( data => setBoard(data))\n  }\n\n  const validateSudoku = () =>{\n    console.log(getBoard,\"getBoard\")\n    fetch('https://sugoku.herokuapp.com/validate', {\n      method: \"POST\",\n      body: JSON.stringify(getBoard),\n      headers: {\n        'Content-Type': 'application/json'\n        },\n    })\n      .then( resp => resp.json() )\n      .then( resp => alert(resp.status))\n  }\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      <Text> ini home </Text>\n      <Button onPress={()=>  chooseDifficulty(\"easy\")} title=\"Easy\"/>\n      <Button onPress={()=>  chooseDifficulty(\"medium\")} title=\"Medium\"/>\n      <Button onPress={()=>  chooseDifficulty(\"hard\")} title=\"Hard\"/>\n\n      {getBoard.board? \n        <div>\n          { \n          // !boardUpdate &&\n          getBoard.board.map((board, row) => {\n            return board.map((item, col) => {\n              {console.log(\"masuk nested looping \", item)}\n                  return (\n                    <>\n                    {item === 0 ? \n                       <TextInput key={`${col}`} defaultValue=\"\" \n                       onChange={(e) => handleOnChange(e,row, col)} style= {styles.box}\n                       /> \n                    : \n                      <TextInput key={`${col}`} value={`${item}`} editable={false}\n                      onChange={(e) => handleOnChange(e,row, col)} style={styles.box, { backgroundColor:'red'}}\n                      /> \n                    }\n                    \n                      {(col + 1) % 9 == 0 ? \n                        <br/>\n                        :\n                        null\n                      }\n                    </>\n                  )\n                \n                })\n              })\n              \n            }\n            <Button onPress={()=>  validateSudoku()} title=\"Validate\"/>\n        </div>\n        :\n        null\n      }\n      <StatusBar style=\"auto\" />\n    </ScrollView>\n  )\n}\n\nconst widthWindows = Dimensions.get(\"window\").width\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  box: {\n    textAlign:'center', \n    width: (widthWindows-30)/9, \n    height: 30, \n    borderWidth:1 ,\n    borderColor:'grey'  \n  }\n});"]},"metadata":{},"sourceType":"module"}