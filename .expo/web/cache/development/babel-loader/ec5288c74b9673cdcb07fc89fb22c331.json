{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/bimanathan/Documents/HACKTIV8/3-phase/2-week/1-day/sugoku/pages/Home.js\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport { StatusBar } from 'expo-status-bar';\nimport { getSudokuBoard } from \"../store/actions/sudokuActions\";\nexport var Home = function Home() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.sudokuReducers;\n  }),\n      sudokuBoard = _useSelector.sudokuBoard;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      getBoard = _useState2[0],\n      setBoard = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      boardUpdate = _useState4[0],\n      setBoardUpdate = _useState4[1];\n\n  var widthWindows = Dimensions.get(\"window\").width;\n  useEffect(function () {\n    dispatch(getSudokuBoard());\n  }, [dispatch]);\n  useEffect(function () {\n    setBoard(sudokuBoard);\n  }, [sudokuBoard]);\n\n  if (getBoard.length === 0) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }\n    }, \" please wait ..\");\n  }\n\n  console.log(getBoard, 'initial');\n\n  var handleOnChange = function handleOnChange(e, row, col) {\n    setBoardUpdate(true);\n    var value = e.target.value;\n    console.log(getBoard, 'awal');\n    console.log(value, 'value');\n    console.log(row, 'row');\n    console.log(col, 'col');\n    var newBoard = getBoard;\n    console.log(newBoard.board[row][col], 'newBoard.board[row][col]');\n    newBoard.board[row][col] = +value;\n    setBoard(newBoard);\n    console.log(getBoard, 'akhir');\n    setBoardUpdate(false);\n  };\n\n  return React.createElement(ScrollView, {\n    contentContainerStyle: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \" ini home \"), !boardUpdate && getBoard.board.length > 0 ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, getBoard.board.map(function (board, row) {\n    return board.map(function (item, col) {\n      return React.createElement(React.Fragment, null, React.createElement(TextInput, {\n        key: col,\n        value: item == \"0\" ? \"\" : \"\" + item,\n        onChange: function onChange(e) {\n          return handleOnChange(e, row, col);\n        },\n        style: {\n          textAlign: 'center',\n          width: (widthWindows - 30) / 9,\n          height: 30,\n          borderWidth: 1,\n          borderColor: 'grey'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }), (col + 1) % 9 == 0 ? React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }) : null);\n    });\n  })) : null, React.createElement(StatusBar, {\n    style: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/bimanathan/Documents/HACKTIV8/3-phase/2-week/1-day/sugoku/pages/Home.js"],"names":["React","useEffect","useState","Provider","useDispatch","useSelector","StatusBar","getSudokuBoard","Home","dispatch","state","sudokuReducers","sudokuBoard","getBoard","setBoard","boardUpdate","setBoardUpdate","widthWindows","Dimensions","get","width","length","console","log","handleOnChange","e","row","col","value","target","newBoard","board","styles","container","map","item","textAlign","height","borderWidth","borderColor","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React , { useEffect, useState } from 'react'\nimport { StyleSheet, Text, View, ScrollView, TextInput, Dimensions } from 'react-native';\nimport { Provider, useDispatch, useSelector } from 'react-redux'\nimport { StatusBar } from 'expo-status-bar';\nimport { getSudokuBoard} from '../store/actions/sudokuActions'\n\n\nexport const Home = () => {\n  const dispatch = useDispatch()\n  const {sudokuBoard} = useSelector(state => state.sudokuReducers)\n  const [getBoard, setBoard] = useState([])\n  const [boardUpdate, setBoardUpdate] = useState(false)\n  const widthWindows = Dimensions.get(\"window\").width\n\n  useEffect( () => {\n    dispatch(getSudokuBoard())\n  },[dispatch])\n\n  useEffect( () => {\n    setBoard(sudokuBoard)\n  },[sudokuBoard])\n\n  if(getBoard.length === 0 ) {\n    return <Text> please wait ..</Text>\n  }\n   \n  console.log(getBoard,'initial')\n  const handleOnChange = (e,row, col) => {\n    setBoardUpdate(true)\n    const {value} = e.target\n    console.log(getBoard,'awal')\n    console.log(value, 'value')\n    console.log(row, 'row')\n    console.log(col, 'col')\n    const newBoard = getBoard\n    console.log(newBoard.board[row][col],'newBoard.board[row][col]')\n    newBoard.board[row][col] = +value\n    setBoard(newBoard)\n    console.log(getBoard,'akhir')\n    setBoardUpdate(false)\n  }\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      <Text> ini home </Text>\n      {!boardUpdate && getBoard.board.length > 0 ? \n        <div>\n          { \n          getBoard.board.map((board, row) => {\n              return board.map((item, col) => {\n                  return (\n                    <>\n                    <TextInput key={col} value={\n                        (item==\"0\") ? \"\" : `${item}`\n                      } \n                      onChange={(e) => handleOnChange(e,row, col)} style= {{textAlign:'center', width: (widthWindows-30)/9, height: 30, borderWidth:1 ,borderColor:'grey'  }}/> \n                      {(col + 1) % 9 == 0 ? \n                        <br/>\n                        :\n                        null\n                      }\n                    </>\n                  )\n                \n                })\n              })\n            }\n        </div>\n        :\n        null\n      }\n      <StatusBar style=\"auto\" />\n    </ScrollView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});"]},"metadata":{},"sourceType":"module"}