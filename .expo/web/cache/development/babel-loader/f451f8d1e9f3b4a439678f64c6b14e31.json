{"ast":null,"code":"export var getSudokuBoard = function getSudokuBoard() {\n  var difficulty = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"easy\";\n  return function (dispact) {\n    fetch(\"https://sugoku.herokuapp.com/board?difficulty=\" + difficulty, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (resp) {\n      return resp.json();\n    }).then(function (data) {\n      return dispact({\n        type: 'SET_SUDOKU_BOARD',\n        payload: {\n          sudokuBoard: data\n        }\n      });\n    });\n  };\n};\nexport var validate = function validate(board) {\n  return function (dispact) {\n    fetch('https://sugoku.herokuapp.com/solve', {\n      method: \"POST\",\n      body: JSON.stringify(board),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (resp) {\n      return resp.json();\n    }).then(function (data) {\n      console.log(data, 'data');\n      dispact({\n        type: 'VALIDATE_BOARD',\n        payload: {\n          result: data\n        }\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/bimanathan/Documents/HACKTIV8/3-phase/2-week/1-day/sugoku/store/actions/sudokuActions.js"],"names":["getSudokuBoard","difficulty","dispact","fetch","method","headers","then","resp","json","data","type","payload","sudokuBoard","validate","board","body","JSON","stringify","console","log","result"],"mappings":"AACA,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,GAAyB;AAAA,MAAxBC,UAAwB,uEAAX,MAAW;AACrD,SAAO,UAACC,OAAD,EAAa;AAClBC,IAAAA,KAAK,oDAAkDF,UAAlD,EAAgE;AACnEG,MAAAA,MAAM,EAAE,KAD2D;AAEnEC,MAAAA,OAAO,EAAE;AACT,wBAAgB;AADP;AAF0D,KAAhE,CAAL,CAMGC,IANH,CAMS,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,KANb,EAOGF,IAPH,CAOS,UAAAG,IAAI;AAAA,aACTP,OAAO,CAAC;AACNQ,QAAAA,IAAI,EAAE,kBADA;AAENC,QAAAA,OAAO,EAAE;AACPC,UAAAA,WAAW,EAAEH;AADN;AAFH,OAAD,CADE;AAAA,KAPb;AAeD,GAhBD;AAiBD,CAlBM;AAqBP,OAAO,IAAMI,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AACjC,SAAO,UAACZ,OAAD,EAAa;AAClBC,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CW,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAFoC;AAG1CT,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHiC,KAAvC,CAAL,CAOGC,IAPH,CAOS,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,KAPb,EAQGF,IARH,CAQS,UAAAG,IAAI,EACT;AAACS,MAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ,EAAiB,MAAjB;AACDP,MAAAA,OAAO,CAAC;AACRQ,QAAAA,IAAI,EAAE,gBADE;AAERC,QAAAA,OAAO,EAAE;AACPS,UAAAA,MAAM,EAAEX;AADD;AAFD,OAAD,CAAP;AAKC,KAfL;AAiBD,GAlBD;AAmBD,CApBM","sourcesContent":["\nexport const getSudokuBoard = (difficulty = \"easy\") => {\n  return (dispact) => {\n    fetch(`https://sugoku.herokuapp.com/board?difficulty=${difficulty}`, {\n      method: 'GET',\n      headers: {\n      'Content-Type': 'application/json'\n      },\n    })\n      .then( resp => resp.json())\n      .then( data => \n        dispact({\n          type: 'SET_SUDOKU_BOARD',\n          payload: {\n            sudokuBoard: data\n          }\n        })\n      )\n  }\n}\n\n\nexport const validate = (board) => {\n  return (dispact) => {\n    fetch('https://sugoku.herokuapp.com/solve', {\n      method: \"POST\",\n      body: JSON.stringify(board),\n      headers: {\n        'Content-Type': 'application/json'\n        },\n    })\n      .then( resp => resp.json() )\n      .then( data => \n        {console.log(data,'data')\n        dispact({\n        type: 'VALIDATE_BOARD',\n        payload: {\n          result: data\n        }\n      })}\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}