{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/bimanathan/Documents/HACKTIV8/3-phase/2-week/1-day/sugoku/pages/Home.js\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport { StatusBar } from 'expo-status-bar';\nimport { getSudokuBoard } from \"../store/actions/sudokuActions\";\nexport var Home = function Home() {\n  var dispatch = useDispatch();\n  var boardGame = [];\n\n  var _useSelector = useSelector(function (state) {\n    return state.sudokuReducers;\n  }),\n      sudokuBoard = _useSelector.sudokuBoard;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      getBoard = _useState2[0],\n      setBoard = _useState2[1];\n\n  var widthWindows = Dimensions.get(\"window\").width;\n  useEffect(function () {\n    dispatch(getSudokuBoard());\n  }, [dispatch]);\n  useEffect(function () {\n    setBoard(sudokuBoard);\n  }, [sudokuBoard]);\n\n  if (sudokuBoard.length === 0) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }\n    }, \" please wait ..\");\n  } else {\n    console.log(sudokuBoard.board, 'sudokuBoard.board');\n\n    for (var i = 0; i < sudokuBoard.board.length; i++) {\n      for (var j = 0; j < sudokuBoard.board[i].length; j++) {\n        boardGame.push(sudokuBoard.board[i][j]);\n      }\n    }\n  }\n\n  var handleOnChange = function handleOnChange(e) {\n    var _e$target = e.target,\n        value = _e$target.value,\n        key = _e$target.key;\n    console.log(value, 'value');\n    console.log(key, 'key');\n  };\n\n  return React.createElement(ScrollView, {\n    contentContainerStyle: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \" ini home \"), getBoard ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, console.log(boardGame, 'boardGame')) : null, React.createElement(StatusBar, {\n    style: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/bimanathan/Documents/HACKTIV8/3-phase/2-week/1-day/sugoku/pages/Home.js"],"names":["React","useEffect","useState","Provider","useDispatch","useSelector","StatusBar","getSudokuBoard","Home","dispatch","boardGame","state","sudokuReducers","sudokuBoard","getBoard","setBoard","widthWindows","Dimensions","get","width","length","console","log","board","i","j","push","handleOnChange","e","target","value","key","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React , { useEffect, useState } from 'react'\nimport { StyleSheet, Text, View, ScrollView, TextInput, Dimensions } from 'react-native';\nimport { Provider, useDispatch, useSelector } from 'react-redux'\nimport { StatusBar } from 'expo-status-bar';\nimport { getSudokuBoard} from '../store/actions/sudokuActions'\n\n\nexport const Home = () => {\n  const dispatch = useDispatch()\n  const boardGame = []\n  const {sudokuBoard} = useSelector(state => state.sudokuReducers)\n  const [getBoard, setBoard] = useState([])\n  const widthWindows = Dimensions.get(\"window\").width\n\n  useEffect( () => {\n    dispatch(getSudokuBoard())\n  },[dispatch])\n\n  useEffect( () => {\n    setBoard(sudokuBoard)\n  },[sudokuBoard])\n\n  if(sudokuBoard.length === 0 ) {\n    return <Text> please wait ..</Text>\n  } else {\n    console.log(sudokuBoard.board, 'sudokuBoard.board')\n    for( let i = 0 ; i < sudokuBoard.board.length ; i++){\n      for( let j = 0 ; j < sudokuBoard.board[i].length ; j++){\n        boardGame.push(sudokuBoard.board[i][j])\n      }\n    }\n  }\n\n  const handleOnChange = (e) => {\n    const {value, key} = e.target\n    console.log(value, 'value')\n    console.log(key, 'key')\n  }\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      <Text> ini home </Text>\n      {getBoard ? \n        <div>\n          { \n          console.log(boardGame,'boardGame')\n            // boardGame.map((board, row) => {\n            //   return board.map((item, col) => {\n            //       return (\n            //         <>\n            //         <TextInput key={col} value={\n            //             (item==\"0\") ? \"\" : `${item}`\n            //           } \n            //           onChange={(e) => handleOnChange(e)} style= {{textAlign:'center', width: (widthWindows-30)/9, height: 30, borderWidth:1 ,borderColor:'grey'  }}/> \n            //           {(col + 1) % 9 == 0 ? \n            //             <br/>\n            //             :\n            //             null\n            //           }\n            //         </>\n            //       )\n                \n            //     })\n            //   })\n            }\n        </div>\n        :\n        null\n      }\n      <StatusBar style=\"auto\" />\n    </ScrollView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});"]},"metadata":{},"sourceType":"module"}